name: Release

on:
  push:
    tags: ["v*"]
  workflow_dispatch:
    inputs:
      version:
        # This input isn't actually used as an input, but it's a reminder that
        # this workflow can only automatically push patch versions.
        # This is because often minor versions require human intervention, so
        # it's safer if we force ourselves to always create them locally.
        description: ⚠️ This workflow can only automatically release patch versions
        required: true
        default: patch

jobs:
  log-updates:
    name: Log packages to publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the new tag
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: This release will publish the following packages
        run: git diff --name-only HEAD^..HEAD

  build:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: log-updates
    steps:
      - uses: actions/checkout@v2
      - name: Build and Test
        run: make prepublish
      - uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: |
            codemods/*/lib/**/*
            eslint/*/lib/**/*
            packages/*/lib/**/*
            packages/babel-standalone/*.js
            !**/node_modules/**

  git-version:
    name: Git tag and commit
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == "workflow_dispatch"
    environment: npm
    steps:
      - uses: actions/checkout@v2
      - name: Set @babel-bot as committer
        run: |
          git config user.name "Babel Bot"
          git config user.email "babel-bot@users.noreply.github.com"
      - name: Create new version
        run: yarn release-tool version -f @babel/standalone --yes
      - name: Output new tag
        run: |
          tag=$(git describe --abbrev=0)
          echo $tag
          echo "::set-output name=tag::$tag"
      - name: Push to GitHub
        run: |
          git push "https://babel-bot:${{ secrets.BOT_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git" main --follow-tags

  npm-release:
    name: Publish release on npm
    runs-on: ubuntu-latest
    needs: [git-version, build]
    environment: npm
    steps:
      - name: Checkout the new tag
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.git-version.outputs.tag }}
      - uses: actions/download-artifact@v2
        with:
          name: build-artifact
      - name: Publish to npm
        run: yarn release-tool publish --yes
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  github-release:
    name: Trigger GitHub release
    runs-on: ubuntu-latest
    needs: npm-release
    steps:
      - name: Checkout the new tag
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get tag info
        id: tags
        uses: babel/actions/get-release-tags@v2

      - name: Generate the changelog
        id: changelog
        uses: babel/actions/generate-lerna-changelog@v2
        with:
          from: ${{ steps.tags.outputs.old }}
          to: ${{ steps.tags.outputs.new }}
        env:
          GITHUB_AUTH: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a draft GitHub release
        uses: babel/actions/publish-github-release@v2
        with:
          tag: ${{ steps.tags.outputs.new }}
          changelog: ${{ steps.changelog.outputs.changelog }}
          token: ${{ secrets.BOT_TOKEN }}

      - name: Check if releasing from main
        id: is_main
        uses: babel/actions/ref-matches-branch@v2
        with:
          name: main

      - name: Update CHANGELOG.md
        if: steps.is_main.outputs.result == 1
        uses: babel/actions/update-changelog@v2
        with:
          changelog: ${{ steps.changelog.outputs.changelog }}

      - name: Commit CHANGELOG.md
        if: steps.is_main.outputs.result == 1
        run: |
          git add CHANGELOG.md
          git -c user.name="Babel Bot" -c user.email="babel-bot@users.noreply.github.com" \
            commit -m "Add ${{ steps.tags.outputs.new }} to CHANGELOG.md [skip ci]" --no-verify --quiet
          git push "https://babel-bot:${{ secrets.BOT_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git" main
